import socket
import sys
from pwn import *

#Creacion de listas para visualizacion
puertos_abiertos = []
puertos_cerrados = []

#Funcion que realiza el escaneo
def escanear_host():
    try:
        print("")

        #Objetos para una mejor visualizacion del proceso
        p1=log.progress("Escaneando Puertos")
        p1.status("Iniciando Escaneo")
        p2=log.progress("Puerto")

        #Ejecucion del escaneo mediante sockets
        for i in range (puerto_inicial,puerto_final+1):
            p2.status(str(i))
            s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
            s.settimeout(0.1)
            resultado = s.connect_ex((host,i))

            #Si el puerto del host esta abierto lo marca como un 0
            if resultado == 0:
                puertos_abiertos.append(i)
            else:
                puertos_cerrados.append(i)
            s.close()

    #Manejo de errores segun exepcion
    except socket.gaierror:
        print("\nEl nombre del host no puede ser resuelto")

    except socket.error:
        print("\nHost no responde")

    except OverflowError:
        print("\nvalores de host (" ,host,") o puerto (",i,") invalidos")

    except KeyboardInterrupt:
        print("\nEjecucion finalizada")  

#Validacion de que se ingrese la cantidad correcta de parametros
if len(sys.argv) == 4:
    try:
        host = sys.argv[1]
        puerto_inicial = int(sys.argv[2])
        puerto_final = int(sys.argv[3])

        #Validacion del rango de los puertos
        if puerto_inicial <= puerto_final:
            if puerto_inicial >= 0 and puerto_final <= 65536:
                escanear_host()
                ip = socket.gethostbyname(host)
                print("\nHost:", host,"- ip:",ip )
                print("\nPuertos abiertos: ",puertos_abiertos)
                print("\nPuertos cerrados: ",puertos_cerrados)
            else:
                print("\nPuertos invalidos, valor de puerto minimo:0, valor de puerto maximo:65535")
                exit()
        else:
            print("\nPuertos invalidos, valor de puerto inicial es mayor que el de puerto final")
            exit()
    #Manejo de errores de ingreso de parametros
    except ValueError:
        print("\nEl valor del puerto '", sys.argv[2],"' o '",sys.argv[3],"' debe ser un numero entero")
    
    finally:
        print("\nEscaneo finalizado ")
else:
    print("\nParametros invalidos")
    exit()